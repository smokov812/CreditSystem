@model BankCreditSystem.Domain.Entities.CreditApplication

@{
    ViewData["Title"] = "Редактирование заявки";
}

<h2>Редактировать заявку</h2>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<form asp-action="Edit" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="CreditApplicationId" />

    <div class="form-group">
        <label asp-for="ClientId"></label>
        <input asp-for="ClientId" class="form-control" />
        <span asp-validation-for="ClientId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Amount"></label>
        <input asp-for="Amount" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TermMonths"></label>
        <input asp-for="TermMonths" class="form-control" type="number" />
        <span asp-validation-for="TermMonths" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Purpose"></label>
        <input asp-for="Purpose" class="form-control" />
        <span asp-validation-for="Purpose" class="text-danger"></span>
    </div>

    <!-- Статус можно оставить доступным для чтения -->
    <div class="form-group">
        <label asp-for="Status"></label>
        <input asp-for="Status" class="form-control" readonly="readonly" />
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Сохранить изменения</button>
    <a class="btn btn-secondary" href="@Url.Action("Index")">Отмена</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
